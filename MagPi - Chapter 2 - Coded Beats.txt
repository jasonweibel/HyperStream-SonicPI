# Sonic PI essentials - https://www.raspberrypi.org/magpi/issues/essentials-sonic-pi-v1/

# -----------------------------------------
# Beat stretching
# Sonic Pi’s sample and synth functions give you a lot of control
# via optional parameters such as amp:, cutoff:, and release:.
# However, the term ‘optional parameter’ is a real mouthful,
# so we just call them opts to keep things nice and simple.
# -----------------------------------------
live_loop :amen_break do
  sample :loop_amen
  sleep 2
end

#live_loop :amen_break do
#  sample :loop_amen, beat_stretch: 2
#  sleep 2
#end

# -----------------------------------------
# Playing with time
# -----------------------------------------
# live_loop :amen_break do
#   use_bpm 30  # change to 50, 80, 120, 200
#   sample :loop_amen, beat_stretch: 2
#   sleep 2
# end

# -----------------------------------------
# Slicing
# This will chop (slice) the sound up.
# -----------------------------------------
# live_loop :amen_break do
#   use_bpm 50
#   with_fx :slicer, phase: 0.25, wave: 0, mix: 1 do
#     sample :loop_amen, beat_stretch: 2, cutoff: 100
#   end
#   sleep 2
# end

# -----------------------------------------
# Bringing it all together
# -----------------------------------------
# use_bpm 90
# use_debug false
# live_loop :amen_break do
#   p = [0.125, 0.25, 0.5].choose
#   with_fx :slicer, phase: p, wave: 0, mix: rrand(0.7, 1),
#     reps: 4 do
#     r = [1, 1, 1, -1].choose
#     sample :loop_amen, beat_stretch: 2, rate: r , amp: 2
#     sleep 2
#   end
# end
# 
# live_loop :bass_drum do
#   sample :bd_haus, cutoff: 70, amp: 1.5
#   sleep 0.5
# end
# 
# live_loop :landing do
#   bass_line = (knit :e1, 3, [:c1, :c2].choose, 1)
#   with_fx :slicer, phase: [0.25, 0.5].choose,
#     invert_wave: 1, wave: 0 do
#     s = synth :square, note: bass_line.tick, sustain: 4, cutoff: 60
#     control s, cutoff_slide: 4, cutoff: 120
#   end
#   sleep 4
# end
# -----------------------------------------
